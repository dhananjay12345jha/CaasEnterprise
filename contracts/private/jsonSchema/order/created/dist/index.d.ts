/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ReferenceTypeId =
  | "cart"
  | "cart-discount"
  | "category"
  | "channel"
  | "customer"
  | "customer-group"
  | "discount-code"
  | "extension"
  | "inventory-entry"
  | "key-value-document"
  | "order"
  | "order-edit"
  | "payment"
  | "product"
  | "product-discount"
  | "product-price"
  | "product-selection"
  | "product-type"
  | "review"
  | "shipping-method"
  | "shopping-list"
  | "state"
  | "store"
  | "subscription"
  | "tax-category"
  | "type"
  | "zone";
export type CountryCode = string;
export type ResourceTypeId =
  | "address"
  | "asset"
  | "cart-discount"
  | "category"
  | "channel"
  | "customer"
  | "customer-group"
  | "custom-line-item"
  | "discount-code"
  | "inventory-entry"
  | "line-item"
  | "order"
  | "order-edit"
  | "order-delivery"
  | "order-parcel"
  | "order-return-item"
  | "payment"
  | "payment-interface-interaction"
  | "product-price"
  | "product-selection"
  | "review"
  | "shipping-method"
  | "shopping-list"
  | "shopping-list-text-line-item"
  | "store"
  | "transaction";
export type TypeTextInputHint = "SingleLine" | "MultiLine";
export type AuthenticationMode = "Password" | "ExternalAuth";
export type AttributeConstraintEnum =
  | "None"
  | "Unique"
  | "CombinationUnique"
  | "SameForAll";
export type TextInputHint = "SingleLine" | "MultiLine";
export type CurrencyCode = string;
export type MoneyType = "centPrecision" | "highPrecision";
export type ChannelRoleEnum =
  | "InventorySupply"
  | "ProductDistribution"
  | "OrderExport"
  | "OrderImport"
  | "Primary";
export type StateTypeEnum =
  | "OrderState"
  | "LineItemState"
  | "ProductState"
  | "ReviewState"
  | "PaymentState";
export type StateRoleEnum = "ReviewIncludedInStatistics" | "Return";
export type StackingMode = "Stacking" | "StopAfterThisDiscount";
export type LineItemPriceMode = "Platform" | "ExternalTotal" | "ExternalPrice";
export type LineItemMode = "Standard" | "GiftLineItem";
export type TaxMode = "Platform" | "External" | "ExternalAmount" | "Disabled";
export type RoundingMode = "HalfEven" | "HalfUp" | "HalfDown";
export type OrderState = "Open" | "Confirmed" | "Complete" | "Cancelled";
export type ShipmentState =
  | "Shipped"
  | "Ready"
  | "Pending"
  | "Delayed"
  | "Partial"
  | "Backorder";
export type PaymentState =
  | "BalanceDue"
  | "Failed"
  | "Pending"
  | "CreditOwed"
  | "Paid";
export type ShippingRateTierType =
  | "CartValue"
  | "CartClassification"
  | "CartScore";
export type ShippingMethodState = "DoesNotMatchCart" | "MatchesCart";
export type ReturnShipmentState =
  | "Advised"
  | "Returned"
  | "BackInStock"
  | "Unusable";
export type ReturnPaymentState =
  | "NonRefundable"
  | "Initial"
  | "Refunded"
  | "NotRefunded";
export type DiscountCodeState =
  | "NotActive"
  | "DoesNotMatchCart"
  | "MatchesCart"
  | "MaxApplicationReached"
  | "ApplicationStoppedByPreviousDiscount"
  | "NotValid";
export type CartState = "Active" | "Merged" | "Ordered";
export type InventoryMode = "TrackOnly" | "ReserveOnOrder" | "None";
export type TaxCalculationMode = "LineItemLevel" | "UnitPriceLevel";
export type TransactionType =
  | "Authorization"
  | "CancelAuthorization"
  | "Charge"
  | "Refund"
  | "Chargeback";
export type TransactionState = "Initial" | "Pending" | "Success" | "Failure";
export type CartOrigin = "Customer" | "Merchant";

export interface Index {
  version: string;
  id: string;
  "detail-type": "order.created";
  source?: string;
  account?: string;
  time: string;
  region?: string;
  detail: Detail;
  [k: string]: unknown;
}
export interface Detail {
  referenced: boolean;
  correlationId: string;
  payload: Payload;
  metadata: Metadata;
  [k: string]: unknown;
}
export interface Payload {
  id?: string;
  version?: number;
  createdAt: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  completedAt?: string;
  orderNumber: string;
  customerId?: string;
  customerEmail: string;
  anonymousId?: string;
  store?: StoreKeyReference;
  lineItems: LineItem[];
  customLineItems?: CustomLineItem[];
  totalPrice: TypedMoney;
  taxedPrice?: TaxedPrice;
  shippingAddress: Address;
  billingAddress: Address;
  taxMode?: TaxMode;
  taxRoundingMode?: RoundingMode;
  customerGroup?: CustomerGroupReference;
  country?: string;
  orderState: OrderState;
  state?: StateReference;
  shipmentState?: ShipmentState;
  paymentState?: PaymentState;
  shippingInfo: ShippingInfo;
  syncInfo?: SyncInfo[];
  returnInfo?: ReturnInfo[];
  discountCodes?: DiscountCodeInfo[];
  lastMessageSequenceNumber?: number;
  cart?: CartReference;
  custom?: CustomFields;
  paymentInfo?: PaymentInfo;
  locale?: string;
  inventoryMode?: InventoryMode;
  origin?: CartOrigin;
  taxCalculationMode?: TaxCalculationMode;
  shippingRateInput?: ShippingRateInput;
  itemShippingAddresses?: Address[];
  refusedGifts?: CartDiscountReference[];
  [k: string]: unknown;
}
export interface LastModifiedBy {
  clientId?: string;
  externalUserId?: string;
  customer?: CustomerReference;
  anonymousId?: string;
  [k: string]: unknown;
}
export interface CustomerReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Customer;
  [k: string]: unknown;
}
export interface Customer {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  customerNumber?: string;
  email?: string;
  password?: string;
  firstName?: string;
  lastName?: string;
  middleName?: string;
  title?: string;
  dateOfBirth?: string;
  companyName?: string;
  vatId?: string;
  addresses?: Address[];
  defaultShippingAddressId?: string;
  shippingAddressIds?: string[];
  defaultBillingAddressId?: string;
  billingAddressIds?: string[];
  isEmailVerified?: boolean;
  externalId?: string;
  customerGroup?: CustomerGroupReference;
  custom?: CustomFields;
  locale?: string;
  salutation?: string;
  key?: string;
  stores?: StoreKeyReference[];
  authenticationMode?: AuthenticationMode;
  [k: string]: unknown;
}
export interface CreatedBy {
  clientId?: string;
  externalUserId?: string;
  customer?: CustomerReference;
  anonymousId?: string;
  [k: string]: unknown;
}
export interface Address {
  id?: string;
  key?: string;
  country: CountryCode;
  title?: string;
  salutation?: string;
  firstName: string;
  lastName: string;
  streetName?: string;
  streetNumber?: string;
  additionalStreetInfo?: string;
  postalCode: string;
  city: string;
  region?: string;
  state?: string;
  company?: string;
  department?: string;
  building?: string;
  apartment?: string;
  pOBox?: string;
  phone?: string;
  mobile?: string;
  email: string;
  fax?: string;
  additionalAddressInfo?: string;
  externalId?: string;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface CustomFields {
  type?: TypeReference;
  fields?: FieldContainer;
  [k: string]: unknown;
}
export interface TypeReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Type;
  [k: string]: unknown;
}
export interface Type {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  name?: LocalizedString;
  description?: LocalizedString;
  resourceTypeIds?: ResourceTypeId[];
  fieldDefinitions?: FieldDefinition[];
  [k: string]: unknown;
}
export interface LocalizedString {
  [k: string]: string;
}
export interface FieldDefinition {
  type?: FieldType;
  name?: string;
  label?: LocalizedString;
  required?: boolean;
  inputHint?: TypeTextInputHint;
  [k: string]: unknown;
}
export interface FieldType {
  name?: string;
  [k: string]: unknown;
}
export interface FieldContainer {
  [k: string]: string;
}
export interface CustomerGroupReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: CustomerGroup;
  [k: string]: unknown;
}
export interface CustomerGroup {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  name?: string;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface StoreKeyReference {
  typeId?: ReferenceTypeId;
  key?: string;
  [k: string]: unknown;
}
export interface LineItem {
  id: string;
  productId?: string;
  productKey?: string;
  name: LocalizedString;
  productSlug?: LocalizedString;
  productType?: ProductTypeReference;
  variant: ProductVariant;
  price?: Price;
  taxedPrice?: TaxedItemPrice;
  totalPrice: TypedMoney;
  quantity: number;
  addedAt?: string;
  state?: ItemState[];
  taxRate: TaxRate;
  supplyChannel?: ChannelReference;
  distributionChannel?: ChannelReference;
  discountedPricePerQuantity?: DiscountedLineItemPriceForQuantity[];
  priceMode?: LineItemPriceMode;
  lineItemMode?: LineItemMode;
  custom?: CustomFields;
  shippingDetails?: ItemShippingDetails;
  lastModifiedAt?: string;
  [k: string]: unknown;
}
export interface ProductTypeReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: ProductType;
  [k: string]: unknown;
}
export interface ProductType {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  name?: string;
  description?: string;
  attributes?: AttributeDefinition[];
  [k: string]: unknown;
}
export interface AttributeDefinition {
  type?: AttributeType;
  name?: string;
  label?: LocalizedString;
  isRequired?: boolean;
  attributeConstraint?: AttributeConstraintEnum;
  inputTip?: LocalizedString;
  inputHint?: TextInputHint;
  isSearchable?: boolean;
  [k: string]: unknown;
}
export interface AttributeType {
  name?: string;
  [k: string]: unknown;
}
export interface ProductVariant {
  id?: number;
  sku: string;
  key?: string;
  prices?: Price[];
  attributes?: Attribute[];
  price?: Price;
  images?: Image[];
  assets?: Asset[];
  availability?: ProductVariantAvailability;
  isMatchingVariant?: boolean;
  scopedPrice?: ScopedPrice;
  scopedPriceDiscounted?: boolean;
  [k: string]: unknown;
}
export interface Price {
  id?: string;
  value?: TypedMoney;
  country?: CountryCode;
  customerGroup?: CustomerGroupReference;
  channel?: ChannelReference;
  validFrom?: string;
  validUntil?: string;
  discounted?: DiscountedPrice;
  tiers?: PriceTier[];
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface TypedMoney {
  centAmount: number;
  currencyCode: CurrencyCode;
  type: MoneyType;
  fractionDigits: number;
  [k: string]: unknown;
}
export interface ChannelReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Channel;
  [k: string]: unknown;
}
export interface Channel {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  roles?: ChannelRoleEnum[];
  name?: LocalizedString;
  description?: LocalizedString;
  address?: Address;
  reviewRatingStatistics?: ReviewRatingStatistics;
  custom?: CustomFields;
  geoLocation?: GeoJson;
  [k: string]: unknown;
}
export interface ReviewRatingStatistics {
  averageRating?: number;
  highestRating?: number;
  lowestRating?: number;
  count?: number;
  ratingsDistribution?: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface GeoJson {
  type?: string;
  [k: string]: unknown;
}
export interface DiscountedPrice {
  value?: TypedMoney;
  discount?: ProductDiscountReference;
  [k: string]: unknown;
}
export interface ProductDiscountReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: ProductDiscount;
  [k: string]: unknown;
}
export interface ProductDiscount {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  name?: LocalizedString;
  key?: string;
  description?: LocalizedString;
  value?: ProductDiscountValue;
  predicate?: string;
  sortOrder?: string;
  isActive?: boolean;
  references?: Reference[];
  validFrom?: string;
  validUntil?: string;
  [k: string]: unknown;
}
export interface ProductDiscountValue {
  type?: string;
  [k: string]: unknown;
}
export interface Reference {
  typeId?: ReferenceTypeId;
  id?: string;
  [k: string]: unknown;
}
export interface PriceTier {
  minimumQuantity?: number;
  value?: TypedMoney;
  [k: string]: unknown;
}
export interface Attribute {
  name?: string;
  value?:
    | string
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | number
    | number
    | boolean;
  [k: string]: unknown;
}
export interface Image {
  url?: string;
  dimensions?: ImageDimensions;
  label?: string;
  [k: string]: unknown;
}
export interface ImageDimensions {
  w?: number;
  h?: number;
  [k: string]: unknown;
}
export interface Asset {
  id?: string;
  sources?: AssetSource[];
  name?: LocalizedString;
  description?: LocalizedString;
  tags?: string[];
  custom?: CustomFields;
  key?: string;
  [k: string]: unknown;
}
export interface AssetSource {
  uri?: string;
  key?: string;
  dimensions?: AssetDimensions;
  contentType?: string;
  [k: string]: unknown;
}
export interface AssetDimensions {
  w?: number;
  h?: number;
  [k: string]: unknown;
}
export interface ProductVariantAvailability {
  isOnStock?: boolean;
  restockableInDays?: number;
  availableQuantity?: number;
  channels?: ProductVariantChannelAvailabilityMap;
  [k: string]: unknown;
}
export interface ProductVariantChannelAvailabilityMap {
  [k: string]: string;
}
export interface ScopedPrice {
  id?: string;
  value?: TypedMoney;
  currentValue?: TypedMoney;
  country?: CountryCode;
  customerGroup?: CustomerGroupReference;
  channel?: ChannelReference;
  validFrom?: string;
  validUntil?: string;
  discounted?: DiscountedPrice;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface TaxedItemPrice {
  totalNet?: TypedMoney;
  totalGross?: TypedMoney;
  totalTax?: TypedMoney;
  [k: string]: unknown;
}
export interface ItemState {
  quantity?: number;
  state?: StateReference;
  [k: string]: unknown;
}
export interface StateReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: State;
  [k: string]: unknown;
}
export interface State {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  type?: StateTypeEnum;
  name?: LocalizedString;
  description?: LocalizedString;
  initial?: boolean;
  builtIn?: boolean;
  roles?: StateRoleEnum[];
  transitions?: StateReference[];
  [k: string]: unknown;
}
export interface TaxRate {
  id?: string;
  name?: string;
  amount: number;
  includedInPrice?: boolean;
  country?: CountryCode;
  state?: string;
  subRates?: SubRate[];
  [k: string]: unknown;
}
export interface SubRate {
  name?: string;
  amount?: number;
  [k: string]: unknown;
}
export interface DiscountedLineItemPriceForQuantity {
  quantity?: number;
  discountedPrice?: DiscountedLineItemPrice;
  [k: string]: unknown;
}
export interface DiscountedLineItemPrice {
  value?: TypedMoney;
  includedDiscounts?: DiscountedLineItemPortion[];
  [k: string]: unknown;
}
export interface DiscountedLineItemPortion {
  discount?: CartDiscountReference;
  discountedAmount?: TypedMoney;
  [k: string]: unknown;
}
export interface CartDiscountReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: CartDiscount;
  [k: string]: unknown;
}
export interface CartDiscount {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  name?: LocalizedString;
  key?: string;
  description?: LocalizedString;
  value?: CartDiscountValue;
  cartPredicate?: string;
  target?: CartDiscountTarget;
  sortOrder?: string;
  isActive?: boolean;
  validFrom?: string;
  validUntil?: string;
  requiresDiscountCode?: boolean;
  references?: Reference[];
  stackingMode?: StackingMode;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface CartDiscountValue {
  type?: string;
  [k: string]: unknown;
}
export interface CartDiscountTarget {
  type?: string;
  [k: string]: unknown;
}
export interface ItemShippingDetails {
  targets?: ItemShippingTarget[];
  valid?: boolean;
  [k: string]: unknown;
}
export interface ItemShippingTarget {
  addressKey?: string;
  quantity?: number;
  [k: string]: unknown;
}
export interface CustomLineItem {
  id?: string;
  name?: LocalizedString;
  money?: TypedMoney;
  taxedPrice?: TaxedItemPrice;
  totalPrice?: TypedMoney;
  slug?: string;
  quantity?: number;
  state?: ItemState[];
  taxCategory?: TaxCategoryReference;
  taxRate?: TaxRate;
  discountedPricePerQuantity?: DiscountedLineItemPriceForQuantity[];
  custom?: CustomFields;
  shippingDetails?: ItemShippingDetails;
  [k: string]: unknown;
}
export interface TaxCategoryReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: TaxCategory;
  [k: string]: unknown;
}
export interface TaxCategory {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  name?: string;
  description?: string;
  rates?: TaxRate[];
  key?: string;
  [k: string]: unknown;
}
export interface TaxedPrice {
  totalNet?: TypedMoney;
  totalGross?: TypedMoney;
  taxPortions?: TaxPortion[];
  totalTax?: TypedMoney;
  [k: string]: unknown;
}
export interface TaxPortion {
  name?: string;
  rate?: number;
  amount?: TypedMoney;
  [k: string]: unknown;
}
export interface ShippingInfo {
  shippingMethodName: string;
  price?: TypedMoney;
  shippingRate?: ShippingRate;
  taxedPrice?: TaxedItemPrice;
  taxRate?: TaxRate;
  taxCategory?: TaxCategoryReference;
  shippingMethod?: ShippingMethodReference;
  deliveries?: Delivery[];
  discountedPrice?: DiscountedLineItemPrice;
  shippingMethodState?: ShippingMethodState;
  [k: string]: unknown;
}
export interface ShippingRate {
  price?: TypedMoney;
  freeAbove?: TypedMoney;
  isMatching?: boolean;
  tiers?: ShippingRatePriceTier[];
  [k: string]: unknown;
}
export interface ShippingRatePriceTier {
  type?: ShippingRateTierType;
  [k: string]: unknown;
}
export interface ShippingMethodReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: ShippingMethod;
  [k: string]: unknown;
}
export interface ShippingMethod {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  name?: string;
  localizedName?: LocalizedString;
  description?: string;
  localizedDescription?: LocalizedString;
  taxCategory?: TaxCategoryReference;
  zoneRates?: ZoneRate[];
  isDefault?: boolean;
  predicate?: string;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface ZoneRate {
  zone?: ZoneReference;
  shippingRates?: ShippingRate[];
  [k: string]: unknown;
}
export interface ZoneReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Zone;
  [k: string]: unknown;
}
export interface Zone {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  key?: string;
  name?: string;
  description?: string;
  locations?: Location[];
  [k: string]: unknown;
}
export interface Location {
  country?: CountryCode;
  state?: string;
  [k: string]: unknown;
}
export interface Delivery {
  id?: string;
  createdAt?: string;
  items?: DeliveryItem[];
  parcels?: Parcel[];
  address?: Address;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface DeliveryItem {
  id?: string;
  quantity?: number;
  [k: string]: unknown;
}
export interface Parcel {
  id?: string;
  createdAt?: string;
  measurements?: ParcelMeasurements;
  trackingData?: TrackingData;
  items?: DeliveryItem[];
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface ParcelMeasurements {
  heightInMillimeter?: number;
  lengthInMillimeter?: number;
  widthInMillimeter?: number;
  weightInGram?: number;
  [k: string]: unknown;
}
export interface TrackingData {
  trackingId?: string;
  carrier?: string;
  provider?: string;
  providerTransaction?: string;
  isReturn?: boolean;
  [k: string]: unknown;
}
export interface SyncInfo {
  channel?: ChannelReference;
  externalId?: string;
  syncedAt?: string;
  [k: string]: unknown;
}
export interface ReturnInfo {
  items?: ReturnItem[];
  returnTrackingId?: string;
  returnDate?: string;
  [k: string]: unknown;
}
export interface ReturnItem {
  id?: string;
  quantity?: number;
  type?: string;
  comment?: string;
  shipmentState?: ReturnShipmentState;
  paymentState?: ReturnPaymentState;
  custom?: CustomFields;
  lastModifiedAt?: string;
  createdAt?: string;
  [k: string]: unknown;
}
export interface DiscountCodeInfo {
  discountCode?: DiscountCodeReference;
  state?: DiscountCodeState;
  [k: string]: unknown;
}
export interface DiscountCodeReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: DiscountCode;
  [k: string]: unknown;
}
export interface DiscountCode {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  name?: LocalizedString;
  description?: LocalizedString;
  code?: string;
  cartDiscounts?: CartDiscountReference[];
  cartPredicate?: string;
  isActive?: boolean;
  references?: Reference[];
  maxApplications?: number;
  maxApplicationsPerCustomer?: number;
  custom?: CustomFields;
  groups?: string[];
  validFrom?: string;
  validUntil?: string;
  applicationVersion?: number;
  [k: string]: unknown;
}
export interface CartReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Cart;
  [k: string]: unknown;
}
export interface Cart {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  key?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  customerId?: string;
  customerEmail?: string;
  anonymousId?: string;
  store?: StoreKeyReference;
  lineItems?: LineItem[];
  customLineItems?: CustomLineItem[];
  totalPrice?: TypedMoney;
  taxedPrice?: TaxedPrice;
  cartState?: CartState;
  shippingAddress?: Address;
  billingAddress?: Address;
  inventoryMode?: InventoryMode;
  taxMode?: TaxMode;
  taxRoundingMode?: RoundingMode;
  taxCalculationMode?: TaxCalculationMode;
  customerGroup?: CustomerGroupReference;
  country?: CountryCode;
  shippingInfo?: ShippingInfo;
  discountCodes?: DiscountCodeInfo[];
  custom?: CustomFields;
  paymentInfo?: PaymentInfo;
  locale?: string;
  deleteDaysAfterLastModification?: number;
  refusedGifts?: CartDiscountReference[];
  origin?: CartOrigin;
  shippingRateInput?: ShippingRateInput;
  itemShippingAddresses?: Address[];
  totalLineItemQuantity?: number;
  [k: string]: unknown;
}
export interface PaymentInfo {
  payments?: PaymentReference[];
  [k: string]: unknown;
}
export interface PaymentReference {
  typeId?: ReferenceTypeId;
  id?: string;
  obj?: Payment;
  [k: string]: unknown;
}
export interface Payment {
  id?: string;
  version?: number;
  createdAt?: string;
  lastModifiedAt?: string;
  lastModifiedBy?: LastModifiedBy;
  createdBy?: CreatedBy;
  customer?: CustomerReference;
  anonymousId?: string;
  externalId?: string;
  interfaceId?: string;
  amountPlanned?: TypedMoney;
  amountAuthorized?: TypedMoney;
  authorizedUntil?: string;
  amountPaid?: TypedMoney;
  amountRefunded?: TypedMoney;
  paymentMethodInfo?: PaymentMethodInfo;
  paymentStatus?: PaymentStatus;
  transactions?: Transaction[];
  interfaceInteractions?: CustomFields[];
  custom?: CustomFields;
  key?: string;
  [k: string]: unknown;
}
export interface PaymentMethodInfo {
  paymentInterface?: string;
  method?: string;
  name?: LocalizedString;
  [k: string]: unknown;
}
export interface PaymentStatus {
  interfaceCode?: string;
  interfaceText?: string;
  state?: StateReference;
  [k: string]: unknown;
}
export interface Transaction {
  id?: string;
  timestamp?: string;
  type?: TransactionType;
  amount?: TypedMoney;
  interactionId?: string;
  state?: TransactionState;
  custom?: CustomFields;
  [k: string]: unknown;
}
export interface ShippingRateInput {
  type?: string;
  [k: string]: unknown;
}
export interface Metadata {
  "x-emc-ubid": string;
  "x-amzn-RequestId"?: string;
  "x-lambda-RequestId"?: string;
  [k: string]: unknown;
}
