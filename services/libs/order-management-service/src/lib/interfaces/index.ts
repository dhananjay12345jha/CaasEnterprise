interface OrderPayloadOrderItem {
  quantity: number;
  itemName: string;
  itemSKU: string;
  itemExternalReference?: string;
  condition?: string;
  saleItemReference: string;
  itemCost: number;
  vatRate: number;
  itemDiscount?: number;
  discountReason?: string;
  itemNote?: string;
  giftMessage?: string;
  isGiftWrapped?: boolean;
  cloudProductID?: number;
  rrp?: number;
}

export interface OrderPayload {
  brandID: number;
  pricesAreNet?: boolean;
  shopID?: number;
  channelType: number;
  paymentGatewayType?: number;
  status: string;
  isTrade?: boolean;
  paymentTermsID?: number;
  currencyCode: string;
  saleReference: string;
  transactionReference?: string;
  shippingService: string;
  shippingNote?: string;
  datePurchased: string;
  discountReason?: string;
  amountPaid: number;
  shippingCost?: number;
  discount?: number;
  deliverByDate?: string;
  dispatchByDate?: string;
  customerFirstName: string;
  customerLastName: string;
  customerCompany?: string;
  customerAddressLine1: string;
  customerAddressLine2?: string;
  customerTownCity: string;
  customerCountyRegion?: string;
  customerPostalCode: string;
  customerCountryCode: string;
  customerCountryName?: string;
  customerEmail: string;
  customerPhone?: string;
  shippingFirstName: string;
  shippingLastName: string;
  shippingCompany?: string;
  shippingAddressLine1: string;
  shippingAddressLine2?: string;
  shippingTownCity: string;
  shippingCountyRegion?: string;
  shippingPostalCode: string;
  shippingCountryCode: string;
  shippingCountryName?: string;
  shippingEmail: string;
  shippingPhone?: string;
  orderItems: Array<OrderPayloadOrderItem>;
}

export interface OMSStoredOrder {
  brandID: number;
  pricesAreNet?: boolean;
  shopID?: number;
  channelType: number;
  paymentGatewayType?: number;
  status: string;
  isTrade?: boolean;
  paymentTermsID?: number;
  currencyCode: string;
  saleReference: string;
  transactionReference?: string;
  shippingService: string;
  shippingNote?: string;
  datePurchased: string;
  discountReason?: string;
  amountPaid: number;
  shippingCost?: number;
  discount?: number;
  deliverByDate?: string;
  dispatchByDate?: string;
  customerFirstName: string;
  customerLastName: string;
  customerCompany?: string;
  customerAddressLine1: string;
  customerAddressLine2?: string;
  customerTownCity: string;
  customerCountyRegion?: string;
  customerPostalCode: string;
  customerCountryCode: string;
  customerCountryName?: string;
  customerEmail: string;
  customerPhone?: string;
  shippingFirstName: string;
  shippingLastName: string;
  shippingCompany?: string;
  shippingAddressLine1: string;
  shippingAddressLine2?: string;
  shippingTownCity: string;
  shippingCountyRegion?: string;
  shippingPostalCode: string;
  shippingCountryCode: string;
  shippingCountryName?: string;
  shippingEmail: string;
  shippingPhone?: string;
  orderItems: Array<OrderPayloadOrderItem>;
}
