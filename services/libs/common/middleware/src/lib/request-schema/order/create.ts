import { z } from "../../validator";

export const orderEventSchema = z.object({
  version: z.string(),
  id: z.string(),
  "detail-type": z.enum(["payment.order.auth.accepted"]),
  referenced: z.boolean().optional(),
  time: z.string(),
  detail: z.object({
    payload: z.object({
      notificationItems: z.array(
        z
          .object({
            NotificationRequestItem: z.object({
              merchantReference: z.string(),
              pspReference: z.string(),
              success: z.string(),
              additionalData: z.object({
                hmacSignature: z.string().optional(),
                checkoutSessionId: z.string(),
                PaymentAccountReference: z.string().optional(),
                acquirerCode: z.string().optional(),
                acquirerReference: z.string().optional(),
                "acsRenderingType.acsUiTemplate": z.string().optional(),
                alias: z.string().optional(),
                aliasType: z.string().optional(),
                arn: z.string().optional(),
                authCode: z.string().optional(),
                authenticationType: z.string().optional(),
                authorisationMid: z.string().optional(),
                authorisedAmountCurrency: z.string().optional(),
                authorisedAmountValue: z.string().optional(),
                avsResult: z.string().optional(),
                avsResultRaw: z.string().optional(),
                bankAccountNumber: z.string().optional(),
                bankLocation: z.string().optional(),
                bankLocationId: z.string().optional(),
                bankName: z.string().optional(),
                bankVerificationResult: z.string().optional(),
                bankVerificationResultRaw: z.string().optional(),
                bic: z.string().optional(),
                "billingAddress.city": z.string().optional(),
                "billingAddress.houseNumberOrName": z.string().optional(),
                "billingAddress.postalCode": z.string().optional(),
                "billingAddress.stateOrProvince": z.string().optional(),
                "billingAddress.street": z.string().optional(),
                browserCode: z.string().optional(),
                captureDelayHours: z.string().optional(),
                captureMerchantRference: z.string().optional(),
                capturePspReference: z.string().optional(),
                cardBin: z.string().optional(),
                cardIssuingBank: z.string().optional(),
                cardIssuingCurrency: z.string().optional(),
                cardIssuingCountry: z.string().optional(),
                cardPaymentMethod: z.string().optional(),
                cardSchemeEnhancedDataLevel: z.string().optional(),
                cardSummary: z.string().optional(),
                cavv: z.string().optional(),
                cavvAlgorithm: z.string().optional(),
                challengeCancel: z.string().optional(),
                cvcResult: z.string().optional(),
                cvcResultRaw: z.string().optional(),
                "deliveryAddress.city": z.string().optional(),
                "deliveryAddress.country": z.string().optional(),
                "deliveryAddress.houseNumberOrName": z.string().optional(),
                "deliveryAddress.postalCode": z.string().optional(),
                "deliveryAddress.stateOrProvince": z.string().optional(),
                "deliveryAddress.street": z.string().optional(),
                deviceType: z.string().optional(),
                "directdebit_GB.dateOfSignature": z.string().optional(),
                "directdebit_GB.mandateId": z.string().optional(),
                "directdebit_GB.sequenceType": z.string().optional(),
                "directdebit_GB.serviceUserName": z.string().optional(),
                "directdebit_GB.serviceUserNumber": z.string().optional(),
                eci: z.string().optional(),
                expiryDate: z.string().optional(),
                extraCostsCurrency: z.string().optional(),
                extraCostsValue: z.string().optional(),
                "fraudCheck--": z.string().optional(),
                fraudManualReview: z.string().optional(),
                fraudOffset: z.string().optional(),
                fraudResultType: z.string().optional(),
                fundingSource: z.string().optional(),
                grossCurrency: z.string().optional(),
                grossValue: z.string().optional(),
                iDealConsumerAccountNumber: z.string().optional(),
                iDealConsumerBIC: z.string().optional(),
                iDealConsumerCity: z.string().optional(),
                iDealConsumerIBAN: z.string().optional(),
                iDealConsumerIban: z.string().optional(),
                iDealConsumerName: z.string().optional(),
                iDealTransactionId: z.string().optional(),
                iban: z.string().optional(),
                "installments.value": z.string().optional(),
                interactionCounter: z.string().optional(),
                "issuerComments.cardholderName": z.string().optional(),
                issuerCountry: z.string().optional(),
                "latestCard.bin": z.string().optional(),
                "latestCard.expiryDate": z.string().optional(),
                "latestCard.summary": z.string().optional(),
                liabilityShift: z.string().optional(),
                "metadata.cartId": z.string(),
                "metadata.cartDigest": z.string(),
                additionalProperties: z.string().optional(),
                "networkToken.available": z.string().optional(),
                "networkToken.bin": z.string().optional(),
                "networkToken.tokenSummary": z.string().optional(),
                "nfc.expire": z.string().optional(),
                "nfc.issue": z.string().optional(),
                "nfc.pin.provided": z.string().optional(),
                "nvc.uid": z.string().optional(),
                "opi.transToken": z.string().optional(),
                ownerCity: z.string().optional(),
                ownerName: z.string().optional(),
                payULatamTrazabilityCode: z.string().optional(),
                paymentLinkId: z.string().optional(),
                paypalAddressStatus: z.string().optional(),
                paypalBillingName: z.string().optional(),
                paypalEmail: z.string().optional(),
                paypalErrorCode: z.string().optional(),
                paypalErrorDescription: z.string().optional(),
                paypalPairingId: z.string().optional(),
                paypalPayerId: z.string().optional(),
                paypalPayerResidenceCountry: z.string().optional(),
                payapPayerStatus: z.string().optional(),
                paypalPhone: z.string().optional(),
                paypalProtectionEligibility: z.string().optional(),
                paypalRisk: z.string().optional(),
                realtimeAccountUpdaterStatus: z.string().optional(),
                "recurring.contractTypes": z.string().optional(),
                "recurring.firstPspReference": z.string().optional(),
                "recurring.recurringDetailReference": z.string().optional(),
                referred: z.string().optional(),
                refusalReasonRaw: z.string().optional(),
                riskProfile: z.string().optional(),
                riskProfileReference: z.string().optional(),
                "sepadirectdebit.dateOfSignature": z.string().optional(),
                "sepadirectdebit.mandateId": z.string().optional(),
                "sepadirectdebit.sequenceType": z
                  .array(z.enum(["OOFF", "FIRST", "RCUR", "FNAL"]))
                  .optional(),
                shopperCountry: z.string().optional(),
                shopperIP: z.string().optional(),
                shopperInteraction: z.string().optional(),
                shopperLocale: z.string().optional(),
                shopperSocialSecurityNumber: z.string().optional(),
                shopperStatement: z.string().optional(),
                shopperTelephone: z.string().optional(),
                store: z.string().optional(),
                tenderReference: z.string().optional(),
                terminalId: z.string().optional(),
                threeDAuthenticated: z.string().optional(),
                threeDAuthenticatedResponse: z.string().optional(),
                threeDOffered: z.string().optional(),
                threeDOfferedResponse: z.string().optional(),
                threeDVersion: z.string().optional(),
                tokenTxVariant: z.string().optional(),
                totalFraudScore: z.string().optional(),
                untokenisedCardSummary: z.string().optional(),
                xid: z.string().optional(),
              }),
              amount: z.object({
                currency: z.string().optional(),
                value: z.number().optional(),
              }),
              eventCode: z.string(),
              eventDate: z.string(),
              merchantAccountCode: z.string().optional(),
              paymentMethod: z.string().optional(),
              reason: z.string().optional(),
            }),
          })
          .optional()
      ),
      live: z.string(),
    }),
    metadata: z.object({
      "x-emc-ubid": z.string().uuid(),
    }),
  }),
  source: z.string().optional(),
  account: z.string().optional(),
  region: z.string().optional(),
  correlationId: z.string().uuid().optional(),
});
